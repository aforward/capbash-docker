#!/bin/bash
[[ -z "$INFO_LEVEL" ]] && source ./submodules/bootstrap/logging

OWNER=${OWNER-$USER}
COPY_OUTPUT=/tmp/copy.log

IFMISSING=${IFMISSING-false}

# TODO: turn into a list
KEY1=$1
VAL1=$2

KEY2=$3
VAL2=$4

KEY3=$5
VAL3=$6


if [[ "$IFMISSING" == true ]]; then

  if [[ ! -e $LOCATION ]]; then
    notify "  -- $LOCATION created"
    OWNER=$OWNER ./submodules/bootstrap/cp ${TEMPLATE} ${LOCATION}
  else
    debug "  -- $LOCATION already exists, skipping"
  fi

else

  if [[ "$CODE" == "" ]]; then
    NEWFILE="${TEMPLATE}.copyif"

    cp ${TEMPLATE} ${NEWFILE}

    if [[ -z "$SED_I" ]]; then
      source ./submodules/bootstrap/env
    fi

    if [[ "$KEY1" != "" ]]; then
      $SED_I "s|$KEY1|$VAL1|g" ${NEWFILE}
    fi

    if [[ "$KEY2" != "" ]]; then
      $SED_I "s|$KEY2|$VAL2|g" ${NEWFILE}
    fi

    if [[ "$KEY3" != "" ]]; then
      $SED_I "s|$KEY3|$VAL3|g" ${NEWFILE}
    fi

  else
    NEWFILE=${LOCATION}.copyif
    echo "$CODE" > $NEWFILE
  fi

  if [[ ! -e $LOCATION ]]; then
    OWNER=$OWNER ./submodules/bootstrap/cp ${NEWFILE} ${LOCATION}
  else
    DIFF=$(diff $NEWFILE $LOCATION) 2> /dev/null

    if [[ "$DIFF" != "" ]]; then
      notify "  -- $LOCATION updated"
      OWNER=$OWNER ./submodules/bootstrap/cp ${NEWFILE} ${LOCATION}
    else
      debug "  -- $LOCATION unchanged"
    fi
  fi
  rm -f $NEWFILE

fi