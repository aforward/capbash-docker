#!/bin/bash
source ./submodules/bootstrap/logging

DOCKER_ASSETS_DIR=${DOCKER_ASSETS_DIR-./assets/dockerimages}
DOCKER_IMAGE_FILE=$DOCKER_ASSETS_DIR/${NAME}.${VERSION}.tar
IMAGE_ID=$(NAME=${NAME} VERSION=${VERSION} ./submodules/docker/image)
FORCE_BUILD=${FORCE_BUILD-true}
OWNER=${OWNER-$USER}

if [[ "$IMAGE_ID" != "" ]] && [[ "$FORCE_BUILD" != "true" ]]; then
  debug "  -- Image ${NAME} ${VERSION} already loaded, add FORCE_BUILD=true to force a build"
elif [[ -e $DOCKER_IMAGE_FILE ]] && [[ "$FORCE_BUILD" != "true" ]]; then
  debug "  -- Attempting to load $DOCKER_IMAGE_FILE, remove this file if you want to build from scratch"
  LAUNCHER_DIR=$LAUNCHER_DIR NAME=${NAME} VERSION=${VERSION} ./submodules/docker/load
else
  if [[ "$FORCE_BUILD" == "true" ]]; then
    debug "  -- Forcing a build from scratch, set FORCE_BUILD=false to reload an existing image"
  else
    debug "  -- No $DOCKER_IMAGE_FILE available, building from scratch"
  fi
  LAUNCHER_DIR=$LAUNCHER_DIR NAME=clj VERSION=${CLJ_VERSION} ./submodules/docker/build
  [ $? -ne 0 ] && exit 1
  OWNER=$OWNER LAUNCHER_DIR=$LAUNCHER_DIR NAME=clj VERSION=${CLJ_VERSION} ./submodules/docker/save
fi